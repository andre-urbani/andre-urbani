{"version":3,"sources":["images/artistflowimage.png","images/bambookimage.png","images/tenquestionsimage.png","images/spaceinvadersimage.png","serviceWorker.js","components/Home.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Home","useState","title","image","artistFlowImage","projectId","description","ghLink","link","bambookImage","questionsImage","spaceInvadersImage","projects","index","setIndex","className","id","to","href","target","class","onClick","e","preventDefault","alt","src","length","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5f6014d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/artistflowimage.20f5c163.png\";","module.exports = __webpack_public_path__ + \"static/media/bambookimage.fdf4009a.png\";","module.exports = __webpack_public_path__ + \"static/media/tenquestionsimage.c6266aae.png\";","module.exports = __webpack_public_path__ + \"static/media/spaceinvadersimage.d7f1d91f.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from 'react';\nimport { HashLink as Link } from 'react-router-hash-link'\n\n//images\n\n//images\n\nimport artistFlowImage from '../images/artistflowimage.png'\nimport bambookImage from '../images/bambookimage.png'\nimport questionsImage from '../images/tenquestionsimage.png'\nimport spaceInvadersImage from '../images/spaceinvadersimage.png'\n\nconst Home = () => {\n\n  const [projects, setProjects] = useState([\n    {\n      title: 'artistFlow',\n      image: artistFlowImage,\n      projectId: 1,\n      description: '',\n      ghLink: '',\n      link: ''\n    },\n    {\n      title: 'Bambook',\n      image: bambookImage,\n      projectId: 2,\n      description: '',\n      ghLink: '',\n      link: ''\n    },\n    {\n      title: 'Ten Questions',\n      image: questionsImage,\n      projectId: 3,\n      description: '',\n      ghLink: '',\n      link: ''\n    },\n    {\n      title: 'Space Invaders',\n      image: spaceInvadersImage,\n      projectId: 4,\n      description: '',\n      ghLink: '',\n      link: ''\n    },\n    {\n      title: 'Event Finder',\n      image: '',\n      projectId: 5,\n      description: '',\n      ghLink: '',\n      link: ''\n    }\n\n  ])\n\n  const [index, setIndex] = useState(0)\n\n\n  function handleClickRight(e) {\n    e.preventDefault()\n    if (index === projects.length - 1) return null\n\n    setIndex(index + 1)\n  }\n\n  function handleClickLeft(e) {\n    e.preventDefault()\n    if (index === 0) return null\n\n    setIndex(index - 1)\n  }\n\n  return <div>\n    <div className='hero-container'>\n      <div className=\"left-column\">\n        <div id=\"page-links\">\n          <Link to=\"#tech-skills\" className=\"effect-underline\">Tech Skills</Link>\n          <Link to=\"#portfolio\" className=\"effect-underline\">Portfolio</Link>\n          <a href=\"#educatiion\" className=\"effect-underline\">Education</a>\n          <a href=\"#contact\" className=\"effect-underline\">Get In Touch</a>\n\n        </div>\n        <div id=\"my-photo\"></div>\n        <div id=\"my-name\" className=\"typewriter\">André Urbani</div>\n        <div id=\"my-hobbies\">Junior Web Developer | Traveler | Music Lover</div>\n        <a href=\"https://github.com/andre-urbani\" target=\"_blank\"><div id=\"icon\" class=\"devicon-github-plain-wordmark colored git\"></div></a>\n\n      </div>\n      <div className=\"right-column\">\n        <div id=\"about-text\">About Me</div>\n        <hr></hr>\n        <div id=\"about-me\">Hi I'm André, hildshgidshglkds, hdisfhidsjf jilfsdjlff jildjfg dsjifjgg hjiljgdgw. gfhsljfhjs jjglsjgklg gjkljgkljgls,fsf. gyjghk ghh ghjg g ggh ghjkgjkgjk ghkgk ghkghkgj gfd gd f fyfjfg gjghk. gyufthdg gyuftyjguhl gyfj. ggkg hgkghff gff d gfyfj.</div>\n      </div>\n    </div>\n    <div className=\"tech-skills-container\" id=\"tech-skills\">\n      <div id=\"my-skills\">Tech Skills</div>\n      <div className=\"icon-container\">\n        <div className=\"first-row\">\n          <div id=\"icon\" class=\"devicon-javascript-plain\"></div>\n          <div id=\"icon\" class=\"devicon-css3-plain-wordmark colored\"></div>\n          <div id=\"icon\" class=\"devicon-express-original\"></div>\n          <div id=\"icon\" class=\"devicon-mongodb-plain-wordmark colored\"></div>\n\n        </div>\n        <div className=\"second-row\">\n          <div id=\"icon\" class=\"devicon-python-plain-wordmark\"></div>\n          <div id=\"icon\" class=\"devicon-sass-original colored\"></div>\n          <div id=\"icon\" class=\"devicon-babel-plain\"></div>\n          <div id=\"icon\" class=\"devicon-postgresql-plain-wordmark colored\"></div>\n          <div id=\"icon\" class=\"devicon-trello-plain-wordmark\"></div>\n        </div>\n        <div className=\"third-row\">\n          <div id=\"icon\" class=\"devicon-react-original-wordmark colored\"></div>\n          <div id=\"icon\" class=\"devicon-nodejs-plain colored\"></div>\n          <div id=\"icon\" class=\"devicon-webpack-plain-wordmark\"></div>\n          <div id=\"icon\" class=\"devicon-git-plain-wordmark colored\"></div>\n          <div id=\"icon\" class=\"devicon-heroku-plain-wordmark colored\"></div>\n        </div>\n        <div className=\"fourth-row\">\n          <div id=\"icon\" class=\"devicon-html5-plain-wordmark\"></div>\n          <div id=\"icon\" class=\"devicon-django-plain\"></div>\n          <div id=\"icon\" class=\"devicon-github-plain-wordmark colored\"></div>\n          <div id=\"icon\" class=\"devicon-visualstudio-plain colored\"></div>\n\n        </div>\n      </div>\n    </div>\n\n    <div id=\"portfolio\" className=\"projects-container\">\n      <div id=\"portfolio-title\">Portfolio</div>\n      <div className=\"portfolio-container\">\n        <div id=\"left-arrow\" onClick={handleClickLeft}>&larr;</div>\n        <div>\n          <img id=\"project-image\" alt={projects[index].title} src={projects[index].image} />\n          <div id=\"projectId\">{projects[index].projectId}</div>\n        </div>\n        <div id=\"right-arrow\" onClick={handleClickRight}>&rarr;</div>\n        <div id=\"description-container\">\n          <div id=\"project-title\">{projects[index].title}</div>\n          <div id=\"project-description\">hjkhlsdjfkdlsjfkljdskfjdksljfkjklfjsdkkjfdklsjfkdsljfkldsjfkldsjfkldsj</div>\n          <div id=\"links-contianer\">\n            <div id=\"project-gh-link\"></div>\n            <div id=\"project-link\"></div>\n          </div>\n        </div>\n      </div>\n      \n      {/* <div>{projects[index].title}</div>\n      <button onClick={handleClick}></button> */}\n    </div>\n  </div>\n\n\n}\n\nexport default Home","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bulma'\nimport '/Users/andreurbani/development/andre-urbani/src/style.scss'\n\nimport Home from './components/Home'\n\nconst App = () => (\n\n  <HashRouter>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n    \n    </Switch>\n  </HashRouter>\n)\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}