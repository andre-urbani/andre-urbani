{"version":3,"sources":["images/artistflowimage.png","images/bambookimage.png","images/tenquestionsimage.png","images/spaceinvadersimage.png","images/eventfinderimage.png","serviceWorker.js","components/Home.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Home","useState","title","image","artistFlowImage","projectId","description","ghLink","link","bambookImage","eventFinderImage","questionsImage","spaceInvadersImage","projects","index","setIndex","className","id","to","href","target","class","onClick","e","preventDefault","alt","src","length","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2138d6a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/artistflowimage.20f5c163.png\";","module.exports = __webpack_public_path__ + \"static/media/bambookimage.fdf4009a.png\";","module.exports = __webpack_public_path__ + \"static/media/tenquestionsimage.c6266aae.png\";","module.exports = __webpack_public_path__ + \"static/media/spaceinvadersimage.d7f1d91f.png\";","module.exports = __webpack_public_path__ + \"static/media/eventfinderimage.40cca434.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from 'react';\nimport { HashLink as Link } from 'react-router-hash-link'\nimport '/Users/andreurbani/development/andre-urbani/src/style.scss'\n\n//images\n\n//images\n\nimport artistFlowImage from '../images/artistflowimage.png'\nimport bambookImage from '../images/bambookimage.png'\nimport questionsImage from '../images/tenquestionsimage.png'\nimport spaceInvadersImage from '../images/spaceinvadersimage.png'\nimport eventFinderImage from '../images/eventfinderimage.png'\n\nconst Home = () => {\n\n  const [projects, setProjects] = useState([\n    {\n      title: 'artistFlow',\n      image: artistFlowImage,\n      projectId: 1,\n      description: 'A fully-functional CRUD application which allows users to search for their favourite artists, and discover new artists based on recommendations from Deezer’s API. Users are able to save artists to their personal profile page, which then displays all upcoming events by each artist, sourced from the Skiddle event API. The application was developed using Django for the back-end and React for the front-end',\n      ghLink: 'https://github.com/andre-urbani/Project-4',\n      link: 'https://artist-flow-au.herokuapp.com/#/'\n    },\n    {\n      title: 'Bambook',\n      image: bambookImage,\n      projectId: 2,\n      description: \"A full stack web application developed using React.js for front-end, and MongoDB for back-end. The idea was to create a fully-functional book club style CRUD application, with complete user functionality. Users are able to register their own profile, add books, short stories, and comment on other users' additions. A ‘wishlist’ feature was also added, which allows users to add books to their own profile as favourites. The project uses RESTful API, Mongodb, Express and Node.js\",\n      ghLink: 'https://github.com/andre-urbani/project-3',\n      link: 'https://bambooklove.herokuapp.com/'\n    },\n    {\n      title: 'Event Finder',\n      image: eventFinderImage,\n      projectId: 3,\n      description: 'Event finder is a tool that helps you find upcoming events in your local area (data sourced from The List API), and was developed using React.js and Mapbox. By submitting a postcode, the user will be navigated to the Events page, which displays all events within a 5 mile radius of the submitted postcode. By clicking on these events, a popup will be displayed, showing the name, time and date of the event. In the side panel to the right, further information regarding the selected event will also be displayed.',\n      ghLink: '',\n      link: ''\n    },\n    {\n      title: 'Ten Questions',\n      image: questionsImage,\n      projectId: 4,\n      description: 'An interactive quiz developed using React.js, and utilising a 3rd party API, developed over two days. An external API was used to gather data from the quiz database, and the player is prompted to choose a quiz category and difficulty. Ten questions are then given to the player, one after the other, with a live score being updated as the player progresses depending on how many questions they get right.'\n      ,\n      ghLink: 'https://github.com/andre-urbani/GA-Project-2-Quiz-API',\n      link: ''\n    },\n    {\n      title: 'Space Invaders',\n      image: spaceInvadersImage,\n      projectId: 5,\n      description: 'A pure JavaScript browser-based game developed over a one week period. The project was completed using vanilla JavaScript, HTML5 & CSS 3 and Flexbox. This was a solo project, and was developed using a grid-based template with focus on DOM manipulation via JavaScript. The game gives the player control of a spaceship via the keyboard, with aliens moving towards the player. Bullets can be fired by the player, and bombs are periodically dropped by randomised aliens.',\n      ghLink: 'https://github.com/andre-urbani/project-1',\n      link: 'https://andre-urbani.github.io/project-1/'\n    }\n\n\n  ])\n\n  const [index, setIndex] = useState(0)\n\n\n  function handleClickRight(e) {\n    e.preventDefault()\n    if (index === projects.length - 1) return null\n\n    setIndex(index + 1)\n  }\n\n  function handleClickLeft(e) {\n    e.preventDefault()\n    if (index === 0) return null\n\n    setIndex(index - 1)\n  }\n\n  return <div className=\"narrow-container\">\n    <div className='hero-container'>\n      <div className=\"left-column\">\n        <div id=\"page-links\">\n          <Link to=\"#tech-skills\" className=\"effect-underline\">Tech Skills</Link>\n          <Link to=\"#portfolio\" className=\"effect-underline\">Portfolio</Link>\n          {/* <a href=\"#educatiion\" className=\"effect-underline\">Education</a> */}\n          <a href=\"#contact\" className=\"effect-underline\">Get In Touch</a>\n\n        </div>\n        <div id=\"my-photo\"></div>\n        <div id=\"my-name\" className=\"typewriter\">André Urbani</div>\n        <div id=\"my-hobbies\">Junior Web Developer | Traveler | Music Lover</div>\n        <a href=\"https://github.com/andre-urbani\" target=\"_blank\"><div id=\"icon\" class=\"devicon-github-plain-wordmark colored git\"></div></a>\n\n      </div>\n      <div className=\"right-column\">\n        <div id=\"about-text\">About Me</div>\n        <hr></hr>\n        <div id=\"about-me\">Hi I'm André, hildshgidshglkds, hdisfhidsjf jilfsdjlff jildjfg dsjifjgg hjiljgdgw. gfhsljfhjs jjglsjgklg gjkljgkljgls,fsf. gyjghk ghh ghjg g ggh ghjkgjkgjk ghkgk ghkghkgj gfd gd f fyfjfg gjghk. gyufthdg gyuftyjguhl gyfj. ggkg hgkghff gff d gfyfj.</div>\n      </div>\n    </div>\n\n    <div className=\"tech-skills-container\" id=\"tech-skills\">\n      {/* <div id=\"my-skills\">Tech Skills</div> */}\n      <div className=\"skills-container\">\n        <h2>Skills</h2>\n        <br />\n        <div><span>Languages:</span> JavaScript, Python, HTML5, CSS3</div>\n        <br />\n        <div><span>Front-End (inc. frameworks):</span> React.js, Bulma</div>\n        <br />\n        <div><span>Back-End (inc. frameworks):</span> Django, Node.js, Express, SQL, PostgreSQL, MongoDB, Mongoose, Firebase, REST APIs</div>\n        <br />\n        <div><span>Other Tools:</span> Git, GitHub, Trello</div>\n      </div>\n      <div className=\"icon-container\">\n        <div className=\"first-row\">\n          <div id=\"icon\" title=\"JavaScript\" class=\"devicon-javascript-plain colored\"></div>\n          <div id=\"icon\" title=\"CSS3\" class=\"devicon-css3-plain-wordmark colored\"></div>\n          <div id=\"icon\" title=\"Express.js\" class=\"devicon-express-original colored\"></div>\n          <div id=\"icon\" title=\"MongoDB\" class=\"devicon-mongodb-plain-wordmark colored\"></div>\n\n        </div>\n        <div className=\"second-row\">\n          <div id=\"icon\" title=\"Python\" class=\"devicon-python-plain-wordmark colored\"></div>\n          <div id=\"icon\" title=\"Sass\" class=\"devicon-sass-original colored\"></div>\n          <div id=\"icon\" title=\"Babel\" class=\"devicon-babel-plain colored\"></div>\n          <div id=\"icon\" title=\"PostgreSQL\" class=\"devicon-postgresql-plain-wordmark colored\"></div>\n          <div id=\"icon\" title=\"Trello\" class=\"devicon-trello-plain-wordmark colored\"></div>\n        </div>\n        <div className=\"third-row\">\n          <div id=\"icon\" title=\"React.js\" class=\"devicon-react-original-wordmark colored\"></div>\n          <div id=\"icon\" title=\"Node.js\" class=\"devicon-nodejs-plain colored\"></div>\n          <div id=\"icon\" title=\"Webpack\" class=\"devicon-webpack-plain-wordmark colored\"></div>\n          <div id=\"icon\" title=\"Git\" class=\"devicon-git-plain-wordmark colored\"></div>\n          <div id=\"icon\" title=\"Heroku\" class=\"devicon-heroku-plain-wordmark colored\"></div>\n        </div>\n        <div className=\"fourth-row\">\n          <div id=\"icon\" title=\"HTML5\" class=\"devicon-html5-plain-wordmark colored\"></div>\n          <div id=\"icon\" title=\"Django\" class=\"devicon-django-plain colored\"></div>\n          <div id=\"icon\" title=\"GitHub\" class=\"devicon-github-plain-wordmark colored\"></div>\n          <div id=\"icon\" title=\"VS Code\" class=\"devicon-visualstudio-plain colored\"></div>\n\n        </div>\n      </div>\n    </div>\n\n    <div id=\"portfolio\" className=\"projects-container\">\n      {/* <div id=\"portfolio-title\">Portfolio</div> */}\n      <div id=\"portfolio-title\">{projects[index].title}</div>\n      <div className=\"portfolio-container\">\n        <div id=\"left-arrow\" onClick={handleClickLeft}>&larr;</div>\n        <div>\n          <img id=\"project-image\" alt={projects[index].title} src={projects[index].image} />\n          <div id=\"project-techs-container\">\n\n          </div>\n        </div>\n        <div id=\"right-arrow\" onClick={handleClickRight}>&rarr;</div>\n        <div id=\"description-container\">\n          {/* <div id=\"project-title\">{projects[index].title}</div> */}\n          <div id=\"project-description\">{projects[index].description}</div>\n          <div id=\"links-container\">\n          <a href={`${projects[index].ghLink}`} target=\"_blank\"><div id=\"github-link\">Github</div></a>\n          <a href={`${projects[index].link}`} target=\"_blank\"><div id=\"page-link\">Link</div></a>\n\n          </div>\n        </div>\n      </div>\n\n      {/* <div>{projects[index].title}</div>\n      <button onClick={handleClick}></button> */}\n    </div>\n  </div>\n\n\n}\n\nexport default Home","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bulma'\nimport '/Users/andreurbani/development/andre-urbani/src/style.scss'\n\nimport Home from './components/Home'\n\nconst App = () => (\n\n  <HashRouter>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n    \n    </Switch>\n  </HashRouter>\n)\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}